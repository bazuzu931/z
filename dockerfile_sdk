FROM  --platform=linux/amd64 openjdk:17-slim
# ENV AVD_NAME android33
ARG AVD_NAME
ENV AVD_NAME ${AVD_NAME}
ENV ANDROID_SDK_TOOLS 9477386
ENV ANDROID_SDK_URL https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
ENV ANDROID_BUILD_TOOLS_VERSION 33.0.0
ENV ANDROID_HOME /root/android/sdk
ENV ANDROID_VERSION 33
ENV QT_DEBUG_PLUGINS=1
ENV PATH $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/emulator

# Set user to root for necessary permissions
USER root


# Install required packages
RUN apt-get update && \
    apt-get install -y vim libqt5gui5 procps libxcb-cursor0 pulseaudio libnss3-dev libgdk-pixbuf2.0-dev libgtk-3-dev libxss-dev && \
    apt-get install -y --no-install-recommends unzip curl && \
    mkdir -p "$ANDROID_HOME" .android && \
    cd "$ANDROID_HOME" && \
    curl -o sdk.zip $ANDROID_SDK_URL && \
    unzip sdk.zip && \
    rm sdk.zip && \
# Download Android SDK
    yes | sdkmanager --licenses --sdk_root=$ANDROID_HOME && \
    sdkmanager --update --sdk_root=$ANDROID_HOME && \
    sdkmanager --sdk_root=$ANDROID_HOME "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" \
    "platforms;android-${ANDROID_VERSION}" \
    "platform-tools" \
    "emulator" \
    "extras;android;m2repository" \
    "extras;google;m2repository" && \
# Clean up
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    apt-get autoremove -y && \
    apt-get clean




RUN sdkmanager --sdk_root=$ANDROID_HOME --install "system-images;android-33;google_apis_playstore;x86_64"


# RUN echo "ANDROID_SDK_ROOT=${ANDROID_HOME}" >> ~/.bashrc
# RUN echo "ANDROID_HOME=${ANDROID_HOME}" >> ~/.bashrc

RUN echo "no" | avdmanager  create avd  --name $AVD_NAME --package "system-images;android-33;google_apis_playstore;x86_64" 

RUN sed -i -e 's/sysdir.1=sdk\//sysdir.1=/g' /root/.android/avd/$AVD_NAME.avd/config.ini




RUN echo "Ubuntu base container is Build!"


# -no-window Parameters must to add!
# RUN emulator -avd $AVD_NAME -gpu swiftshader_indirect -no-audio -no-boot-anim 

# docker run -it --rm -e "DISPLAY=$DISPLAY"  -v "$HOME/.Xauthority:/root/.Xauthority:ro"  \
#  --network host --name a-container --device /dev/kvm  b /bin/bash


# not help
# install libxcb-cursor0

